<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAADAUExURTyKtfX2+bzO4TaJs22dwWCYvpW10Zy51EKMtsXV5fr6+1OSuo6wzrfL3+Pp8YmuzOrv
        9IGpycrY5yyGsnmlxqrC2aG91tHc6U+QuCiFscDR4vH097LH3e/y987b6JGyz97l7q7F23WixVqVvLnM
        34Sryl6XvcjW5WmcwUqPuNri7dXf6+br8v3+//v8/jGHsvf5+32nyG+fwyeFsFiUu8TU42abwOfs87PI
        3XGgw5i30p+71eDn76jB2SSEsP///xN+VJcAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlx
        yWU8AAAC4UlEQVRYR+2WV1vCMBSGC2VZmVLZQzYOhixRNPn//0rI+dImIeV5wFvfK07y9aXjpKnD/8i/
        IErQbGRXNZexsjPwD9U5Rq1YBF7us8xUMoVXTFk4Eyx/nnGcSuIB02eYgrt7HGLivyFhoAuWBcQtOHGE
        dDRBMYmwne4MORVVkK8hSWTuN6cnofBueR6KoKgc/9zdtsVgfu8rktL5OYSC2AApxpINNdisZDDO2BfG
        QkJBCRnmtMz/aY8wxeoNDAUEgjgibJDHiEpcXkeGrixECpqyfXZNjOhUHcyPMCCRgjTmB/bjOe8sKFB/
        wgCAoIk/cGznTzxSgr2jBhDI2R6VVhIUKRdRExCgBce2XpM81SlUQU2Q4IOm2NlD0vAptENJkKBFU5mL
        rw4+oVQ5hlpAAjRKQRSRzNCRE9QCEuxoxr5gQ3ANPygFJID6WxTRoFmyKAUkQJNcvgWc5yimdQIJaMIV
        vy/QoFwfpeAqARacRYC1thRFNHjaJZQCEmApvogimhTFuigFJECbt0QRzYpi2oIhAd7mxkIzWeJKO6gF
        JMDdcbUmPWOIlIdaQII2FtqjqKKYUmiFkiCBvLrapVN4oAzboyYgwNmxFJU2vA1FjOuEwMOmUtdukEaW
        EvpKCAS8h+lM1IKSAVd/owWC+RiBmvHWBT3cZnbAgEQKeFUmnC1GFOboQcY22jM8Egj4ARG2Lpi7z2uw
        7a9zGAoIBbM+QseT+PrA4ImOL0/uiGve5VDAl2iUE/Vpeptvztovw4LxzWMaFAGPYU1dxjCoAu4FW/wl
        FneICzQB53v9m0ZlgHY3DIaAv+HVbeJWvHkwpRpMwfGm99fIhbjdU//Ngg+VRbiDnAs4/05j3RCLRAsf
        DaGhHBhsgiPFYcrfjTfJxKgyUVafxRAhiGIm1yQroyevFISrmtXpFXy1IDRMRXm9QO4OU7o3Nwhok15h
        G7tFcDLI428T8PRnsI3eJlD4F/xZwPkvVmy+Crw4kIwAAAAASUVORK5CYII=
</value>
  </data>
</root>